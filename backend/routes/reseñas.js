const express = require('express');
const router = express.Router();
const Rese침a = require('../models/Rese침a');

// GET rese침as
router.get('/', async (req, res) => {
  try {
    const rese침as = await Rese침a.find().populate('juegoId', 'titulo');
    res.json(rese침as);
  } catch (err) {
    res.status(500).json({ message: err.message });
  }
});

// POST rese침as
router.post('/', async (req, res) => {
  try {
    const rese침a = new Rese침a({
      juegoId: req.body.juegoId,
      puntuacion: req.body.puntuacion,
      textoRese침a: req.body.textoRese침a,
      horasJugadas: req.body.horasJugadas,
      dificultad: req.body.dificultad,
      recomendaria: req.body.recomendaria
    });

    const nuevaRese침a = await rese침a.save();
    res.status(201).json(nuevaRese침a);
  } catch (err) {
    console.error('Error al crear rese침a:', err); // 游녣 Para debug
    res.status(400).json({ message: err.message });
  }
});

// GET rese침as/juego/:juegoId
router.get('/juego/:juegoId', async (req, res) => {
  try {
    const rese침as = await Rese침a.find({ juegoId: req.params.juegoId });
    res.json(rese침as);
  } catch (err) {
    res.status(500).json({ message: err.message });
  }
});

// PUT rese침as/:id
router.put('/:id', async (req, res) => {
  try {
    const rese침a = await Rese침a.findByIdAndUpdate(
      req.params.id,
      { ...req.body, fechaActualizacion: Date.now() },
      { new: true, runValidators: true }
    );
    if (!rese침a) return res.status(404).json({ message: 'Rese침a no encontrada' });
    res.json(rese침a);
  } catch (err) {
    res.status(400).json({ message: err.message });
  }
});

// DELETE rese침as/:id
router.delete('/:id', async (req, res) => {
  try {
    const rese침a = await Rese침a.findByIdAndDelete(req.params.id);
    if (!rese침a) return res.status(404).json({ message: 'Rese침a no encontrada' });
    res.json({ message: 'Rese침a eliminada' });
  } catch (err) {
    res.status(500).json({ message: err.message });
  }
});

module.exports = router;